/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DGSPrefsDialog.java
 *
 * Created on Dec 6, 2009, 12:21:29 PM
 */

package dgspreviewer;

import org.jdesktop.application.Action;
import dgspreviewer.Options;
import dgspreviewer.DGSPreviewCanvas.DisplayMode;
/**
 *
 * @author dwimsey
 */
public class DGSPrefsDialog extends javax.swing.JDialog {

    /** Creates new form DGSPrefsDialog */
    public DGSPrefsDialog(java.awt.Frame parent, boolean modal, Options newOpts) {
        super(parent, modal);
		if (newOpts == null) {
			throw new java.lang.NullPointerException("NULL Options pointer is not allowed.");
		}
		this.options = newOpts;
        initComponents();

		cbStartupDisplayMode.removeAllItems();
		cbStartupDisplayMode.insertItemAt("Last Used", 0);
		cbStartupDisplayMode.insertItemAt(DisplayMode.Draft, 1);
		cbStartupDisplayMode.insertItemAt(DisplayMode.GIF, 2);
		cbStartupDisplayMode.insertItemAt(DisplayMode.JPEG, 3);
//		cbStartupDisplayMode.insertItemAt(DisplayMode.PDF, 4);
		cbStartupDisplayMode.insertItemAt(DisplayMode.PNG, 4);
//		cbStartupDisplayMode.insertItemAt(DisplayMode.Printer, 6);
//		cbStartupDisplayMode.insertItemAt(DisplayMode.TIFF, 7);

		optionsToDisplay(newOpts);
	}

	private void optionsToDisplay(Options newOpts)
	{
		this.textBGColor.setText("#" + (String.format("%1$X", newOpts.getBackgroundColor().getRGB())).substring(2, 8));
		if(DisplayMode.Printer == newOpts.getStartupMode()) {
			cbStartupDisplayMode.setSelectedIndex(0);
		} else if(DisplayMode.Draft == newOpts.getStartupMode()) {
			cbStartupDisplayMode.setSelectedIndex(1);
		} else if(DisplayMode.GIF == newOpts.getStartupMode()) {
			cbStartupDisplayMode.setSelectedIndex(2);
		} else if(DisplayMode.JPEG == newOpts.getStartupMode()) {
			cbStartupDisplayMode.setSelectedIndex(3);
//		} else if(DisplayMode.PDF == newOpts.getStartupMode()) {
//			cbStartupDisplayMode.setSelectedIndex(4);
		} else if(DisplayMode.PNG == newOpts.getStartupMode()) {
			cbStartupDisplayMode.setSelectedIndex(4);
//		} else if(DisplayMode.Printer == newOpts.getStartupMode()) {
//			cbStartupDisplayMode.setSelectedIndex(6);
//		} else if(DisplayMode.TIFF == newOpts.getStartupMode()) {
//			cbStartupDisplayMode.setSelectedIndex(7);
		} else {
			throw new java.lang.IllegalArgumentException("Unexpected value for startupDisplayMode");
//			throw new java.lang.IllegalArgumentException("Unexpected value for startupDisplayMode: " + cbStartupDisplayMode.getSelectedItem().toString() + cbStartupDisplayMode. + " (" + cbStartupDisplayMode.getSelectedIndex().toString() + ")");
		}
	}


	/**
	 * @param newOpts Options object to save to
	 * @return true if changes were made to newOpts
	 */
	private int displayToOptions(Options newOpts)
	{
		int changes = 0;
		java.awt.Color t;// = this.BackgroundColor;
		try {
			t = java.awt.Color.decode(this.textBGColor.getText());
			if(!t.equals(newOpts.getBackgroundColor())) {
				changes++;
				newOpts.setBackgroundColor(t);
			}
		} catch (NumberFormatException ex) {
			ex.printStackTrace();
			return(-1);
		}

		if(cbStartupDisplayMode.getSelectedIndex()==0) {
			newOpts.setStartupMode(DisplayMode.Printer);
		} else if(cbStartupDisplayMode.getSelectedIndex()==1) {
			newOpts.setStartupMode(DisplayMode.Draft);
		} else if(cbStartupDisplayMode.getSelectedIndex()==2) {
			newOpts.setStartupMode(DisplayMode.GIF);
		} else if(cbStartupDisplayMode.getSelectedIndex()==3) {
			newOpts.setStartupMode(DisplayMode.JPEG);
//		} else if(cbStartupDisplayMode.getSelectedIndex()==4) {
//			newOpts.setStartupMode(DisplayMode.PDF);
		} else if(cbStartupDisplayMode.getSelectedIndex()==4) {
			newOpts.setStartupMode(DisplayMode.PNG);
//		} else if(cbStartupDisplayMode.getSelectedIndex()==6) {
//			newOpts.setStartupMode(DisplayMode.Printer);
//		} else if(cbStartupDisplayMode.getSelectedIndex()==7) {
//			newOpts.setStartupMode(DisplayMode.TIFF);
		} else {
			throw new java.lang.IllegalArgumentException("Unexpected value for startupDisplayMode: " + cbStartupDisplayMode.getSelectedItem().toString() + " (" + cbStartupDisplayMode.getSelectedIndex() + ")");
		}
		return(changes);
	}

	public Options getOptions()
	{
		return(this.options);
	}
	/** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        labelBGColor = new javax.swing.JLabel();
        textBGColor = new javax.swing.JTextField();
        buttonColorPicker = new javax.swing.JButton();
        labelStartupDisplayMode = new javax.swing.JLabel();
        cbStartupDisplayMode = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setName("DGS Previewer Preferences"); // NOI18N
        setResizable(false);

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(dgspreviewer.DGSPreviewerApp.class).getContext().getActionMap(DGSPrefsDialog.class, this);
        buttonOk.setAction(actionMap.get("onOkClicked")); // NOI18N
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(dgspreviewer.DGSPreviewerApp.class).getContext().getResourceMap(DGSPrefsDialog.class);
        buttonOk.setText(resourceMap.getString("buttonOk.text")); // NOI18N
        buttonOk.setName("buttonOk"); // NOI18N

        buttonCancel.setAction(actionMap.get("onCancelClicked")); // NOI18N
        buttonCancel.setText(resourceMap.getString("buttonCancel.text")); // NOI18N
        buttonCancel.setName("buttonCancel"); // NOI18N

        labelBGColor.setText(resourceMap.getString("labelBGColor.text")); // NOI18N
        labelBGColor.setName("labelBGColor"); // NOI18N

        textBGColor.setText(resourceMap.getString("textBGColor.text")); // NOI18N
        textBGColor.setName("textBGColor"); // NOI18N

        buttonColorPicker.setAction(actionMap.get("onBGColorClicked")); // NOI18N
        buttonColorPicker.setText(resourceMap.getString("buttonColorPicker.text")); // NOI18N
        buttonColorPicker.setName("buttonColorPicker"); // NOI18N

        labelStartupDisplayMode.setText(resourceMap.getString("labelStartupDisplayMode.text")); // NOI18N
        labelStartupDisplayMode.setName("labelStartupDisplayMode"); // NOI18N

        cbStartupDisplayMode.setName("cbStartupDisplayMode"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(317, Short.MAX_VALUE)
                .addComponent(buttonOk)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCancel)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelBGColor)
                    .addComponent(labelStartupDisplayMode))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbStartupDisplayMode, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textBGColor, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonColorPicker)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBGColor)
                    .addComponent(textBGColor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonColorPicker))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelStartupDisplayMode)
                    .addComponent(cbStartupDisplayMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 181, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancel)
                    .addComponent(buttonOk))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DGSPrefsDialog dialog = new DGSPrefsDialog(new javax.swing.JFrame(), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

	@Action
	public void onBGColorClicked() {
	}

	@Action
	public void onOkClicked() {
		displayToOptions(this.options);
		this.dispose();
	}

	@Action
	public void onCancelClicked() {
		this.dispose();
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonColorPicker;
    private javax.swing.JButton buttonOk;
    private javax.swing.JComboBox cbStartupDisplayMode;
    private javax.swing.JLabel labelBGColor;
    private javax.swing.JLabel labelStartupDisplayMode;
    private javax.swing.JTextField textBGColor;
    // End of variables declaration//GEN-END:variables

	private Options options;
}
